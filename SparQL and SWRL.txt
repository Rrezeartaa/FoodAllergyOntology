SPARQL queries

8.1
PREFIX feo: <http://www.semanticweb.org/admin/ontologies/2022/4/untitled-ontology-63/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 

SELECT DISTINCT ?characteristic ?classes
WHERE{

	?characteristic a ?classes.
	?classes rdfs:subClassOf ?food.
}


8.2
PREFIX feo: <http://www.semanticweb.org/admin/ontologies/2022/4/untitled-ontology-63/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
SELECT ?food ?price
WHERE { ?food feo:hasPrice ?price}
ORDER BY DESC(?price) LIMIT 1


8.3
PREFIX feo: <http://www.semanticweb.org/admin/ontologies/2022/4/untitled-ontology-63/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
PREFIX food: <http://purl.org/heals/food/>

SELECT DISTINCT ?food ?ingredient ?seasonAvailable
WHERE {
?food food:hasIngredient ?ingredient.
OPTIONAL {?ingredient feo:isAvailibleIn ?seasonAvailable}

}

ORDER BY ASC (?food)

8.4
PREFIX feo: <http://www.semanticweb.org/admin/ontologies/2022/4/untitled-ontology-63/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 

SELECT Distinct ?user (COUNT(?accomplished) as ?completedGoals) (COUNT(?goal) as ?leftGoals)

WHERE {
{
	?user feo:hasGoal ?goal
}
UNION{
	?user feo:accomplishedGoal ?accomplished
}
}

GROUP BY ?accomplished ?user
ORDER BY ASC (?count)


8.5
PREFIX feo: <http://www.semanticweb.org/admin/ontologies/2022/4/untitled-ontology-63/>
PREFIX food: <http://purl.org/heals/food/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
SELECT DISTINCT ?user ?allergicIngredient
WHERE {
{
?user food:isAllergicTo ?allergicIngredient
}
UNION
{
 ?allergicIngredient food:isAllergicFor ?user
}
}

8.6
PREFIX feo: <http://www.semanticweb.org/admin/ontologies/2022/4/untitled-ontology-63/>
PREFIX eo: <http://purl.org/heals/eo#>
SELECT DISTINCT ?goal ((Count( distinct ?accomplishedUsers))/(Count( distinct ?allOtherUsers)) as ?percentAccomplished)
WHERE {
	?WhyFollowLowCalorieDiet feo:hasParameter ?diet.
	?WhyFollowLowCalorieDiet feo:askedBy ?mainUser.
	?mainUser feo:hasGoal ?goal.
	?allOtherUsers feo:hasDiet ?diet.
	FILTER( ?allOtherUsers != ?mainUser ).
	?accomplishedUsers feo:hasDiet ?diet.
	?accomplishedUsers feo:accomplishedGoal ?goal.
}
GROUP BY ?goal
Having ((Count(distinct ?accomplishedUsers))/(Count(distinct ?allOtherUsers)) >=.5)

---------

SWRL Rules:

1. feo:Diet(?d)->sqwrl:count(?d)

2. food:Food(?f) ^ feo:hasPrice(?f, ?price) ^ swrlb:lessThan(?price, 30) -> sqwrl:select(?f, ?price) 

3. feo:hasCharacteristic(?c1, ?c2) ^ feo:hasCharacteristic(?c2, ?c3) -> feo:hasCharacteristic(?c1, ?c3)

4. feo:Diet(?d)->sqwrl:select(?d)^sqwrl:orderByDescending(?d)

5. owl:Thing(?name)^feo:Diet(?diet)^feo:hasDiet(?name,?diet)^feo:hasGoal(?name,?goal) . sqwrl:makeSet(?s,?name)->sqwrl:select(?name,?goal,?diet)

6. feo:HighFolateFood(?recommendedFood) ^ feo:Diet(?diet) ^ feo:recommendedBy(?recommendedFood, ?diet)  .  sqwrl:makeBag(?hff, ?recommendedFood) -> sqwrl:select(?recommendedFood, ?diet)